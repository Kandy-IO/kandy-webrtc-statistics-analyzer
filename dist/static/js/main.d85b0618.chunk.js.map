{"version":3,"sources":["components/chart.js","parser/parser.js","constants.js","parser/schemas.js","utils.js","components/dataContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Chart","parsedData","title","data","style","fontWeight","width","height","margin","top","right","left","bottom","dataKey","type","stroke","activeDot","r","RTCInboundRTPAudioStream","RTCOutboundRTPAudioStream","RTCInboundRTPVideoStream","RTCOutboundRTPVideoStream","RTCIceCandidate","RTCIceCandidatePair","sdkInfoSchema","text","key","isDate","SCHEMAS","schema","startTime","endTime","nominated","localCandidateId","remoteCandidateId","transportId","standartKeys","defaultValue","exceptionKeys","hasLinkedKey","exceptionKey","exceptionKey2","networkType","ip","port","candidateType","relayProtocol","codec","packetsReceived","packetsReceived_s","bytesReceived","bytesReceived_s","packetsLost","jitter","jitterBufferDelay","streamIds","totalPacketsReceived","totalBytesReceived","linkedKey","perSecondCalculationKeys","perSecondKey","totalValueKey","hiddenKeys","packetsSent","packetsSent_s","bytesSent","bytesSent_s","totalPacketsSent","totalBytesSent","decoderImplementation","pliCount","nackCount","frameWidth","frameHeight","framesPerSecond","encoderImplementation","timestampToMiliseconds","timestamp","Math","ceil","timestampToLocalTime","Intl","DateTimeFormat","navigator","languages","timeStyle","hour12","format","Date","isLikelyTimeStamp","value","isNaN","String","length","Panel","Collapse","DataContainer","state","mainCollapseActiveKeys","iceCandidateActiveKeys","prevProps","_","isEqual","this","props","descriptionList","setState","activeKey","onChange","activeKeys","_getCharts","_getIceCandidatePairs","_getIceCandidates","chartList","isEmpty","map","chartData","result","_charts","Object","entries","filter","item","Array","isArray","includes","_chartDescriptions","chart","_chartData","finalChartData","timeSpan","forEach","i","date","push","getTime","description","Item","label","labelStyle","header","justifyContent","padding","column","xs","sm","lg","iceCandidatePairList","find","iceCandidatePairArray","nominatedCandidatePairIndex","nominatedCandidatePair","candidateIds","unshift","iceCandidatePair","iceCandidatePairKey","iceCandidatePairData","_getPanelHeaderStyle","isBold","headerText","entry","onClick","_onClickIceCandidatePairLink","href","iceCandidateList","iceCandidateArray","notNominatedCandidates","nominatedCandidates","iceCandidate","iceCandidateKey","iceCandidateData","id","isAdded","indexOf","newState","Component","React","memo","results","resetResults","samplingPeriod","saveChartData","RTCKey","fullData","SCHEMA","timestampUs","last","timeStamp","perSecondValue","currentValue","previousValue","currentTime","previousTime","deltaValue","deltaTime","calculatePerSecondValue","isFinite","dataList","objectByKey","valueToSave","get","saveConstData","assign","handleFileSelection","file","setCalls","setError","fileReader","FileReader","onload","loadEvent","fileContent","JSON","parse","call","allLogItems","allSdkInfoItems","sdkInfo","firstSdkInfoObj","secondSdkInfoObj","lastSdkInfoObj","_sdkInfoObj","members","sdk","version","callId","platform","_timestampUs","_timestamp","_samplingPeriod","round","getSDKInfo","saveData","keys","newObj","parseCallStatsData","error","console","handleFileContentParsing","target","onerror","warn","readAsText","CHARTS","DESCRIPTIONS","Content","Layout","Dragger","Upload","App","useState","calls","loading","setLoading","useEffect","notification","message","toString","log","draggerProps","name","showUploadList","customRequest","info","originFileObj","tabsProps","defaultActiveKey","size","renderSDKInfo","dateStyle","spinning","backgroundColor","className","InboxOutlined","TabPane","tab","slice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d85b0618.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip\n} from 'recharts';\n\nfunction Chart({ title, data }) {\n  return(\n    <div>\n      <span style={{ fontWeight: 'bold' }}>{ title }</span>\n      <LineChart\n        width={ 600 }\n        height={ 300 }\n        data={ data }\n        margin={{\n          top: 5, right: 30, left: 20, bottom: 5\n        }}\n      >\n        <CartesianGrid />\n        <XAxis dataKey='time' />\n        <YAxis dataKey='value' />\n        <Tooltip />\n        <Line type='monotone' dataKey='value' stroke='#8884d8' activeDot={{ r: 8 }} />\n      </LineChart>\n    </div>\n  );\n}\n\nexport default Chart;","import _ from 'lodash';\n\nimport SCHEMAS from './schemas';\nimport {\n  RTCInboundRTPAudioStream,\n  RTCOutboundRTPAudioStream,\n  RTCInboundRTPVideoStream,\n  RTCOutboundRTPVideoStream,\n  RTCIceCandidate,\n  RTCIceCandidatePair,\n} from '../constants';\nimport { timestampToMiliseconds } from '../utils';\n\nlet results = resetResults();\nlet samplingPeriod = 0;\nlet parsedData;\n\nfunction resetResults() {\n  // this is to keep the keys in a particular order in UI\n  // if ever need to change this order, do it here\n  // it will take effect in UI\n  return {\n    [RTCInboundRTPAudioStream]: null,\n    [RTCOutboundRTPAudioStream]: null,\n    [RTCInboundRTPVideoStream]: null,\n    [RTCOutboundRTPVideoStream]: null,\n    [RTCIceCandidatePair]: null,\n    [RTCIceCandidate]: null\n  };\n}\n\nfunction saveChartData(RTCKey, data, fullData) {\n  const SCHEMA = SCHEMAS[RTCKey]();\n  const state = {};\n\n  if (!results[RTCKey]) {\n    results[RTCKey] = SCHEMA.schema;\n    results[RTCKey].startTime = data.timestampUs || data.timestamp;\n  }\n\n  if (!results[RTCKey].streamIds.includes(data.id)) {\n    SCHEMA.perSecondCalculationKeys.forEach(item => {\n      results[RTCKey][item.totalValueKey] = _.last(results[RTCKey][item.key]) || 0;\n    });\n  }\n\n  SCHEMA.perSecondCalculationKeys.forEach(item => {\n    state[item.key] = data[item.key];\n\n    if (results[RTCKey][item.totalValueKey] !== 0) {\n      state[item.key] += results[RTCKey][item.totalValueKey];\n    }\n\n    const timeStamp = data.timestampUs || data.timestamp;\n    const perSecondValue = calculatePerSecondValue({\n      currentValue: state[item.key],\n      previousValue: _.last(results[RTCKey][item.key]) || 0,\n      currentTime: timeStamp,\n      previousTime: results[RTCKey].endTime || (timestampToMiliseconds(timeStamp) - (samplingPeriod * 1000))\n    });\n\n    if (_.isFinite(perSecondValue)) {\n      results[RTCKey][item.perSecondKey].push(perSecondValue);\n    }\n\n    results[RTCKey][item.key].push(state[item.key]);\n  });\n\n  SCHEMA.standartKeys.forEach(item => {\n    item.type === 'array'\n      ? results[RTCKey][item.key].push(data[item.key] || item.defaultValue)\n      : (results[RTCKey][item.key] = data[item.key] || item.defaultValue);\n  });\n\n  SCHEMA.exceptionKeys.forEach(item => {\n    let objectByKey = null;\n    let valueToSave = null;\n\n    if (item.hasLinkedKey) {\n      objectByKey = getItemFromCollectionByKey(fullData, data[item.linkedKey]);\n      if (objectByKey) {\n        valueToSave = _.get(\n          objectByKey,\n          item.exceptionKey,\n          item.exceptionKey2\n            ? objectByKey[item.exceptionKey2]\n            : objectByKey[item.key]\n        );\n\n        item.type === 'array'\n          ? results[RTCKey][item.key].push(valueToSave)\n          : (results[RTCKey][item.key] = valueToSave);\n      }\n    } else {\n      valueToSave = _.get(data, item.exceptionKey, data[item.exceptionKey2]);\n\n      item.type === 'array'\n        ? results[RTCKey][item.key].push(valueToSave)\n        : (results[RTCKey][item.key] = valueToSave);\n    }\n  });\n}\n\nfunction saveConstData(RTCKey, data) {\n  const SCHEMA = SCHEMAS[RTCKey]();\n\n  if (!(results[RTCKey] && results[RTCKey][data.id])) {\n    results[RTCKey] = Object.assign({}, results[RTCKey], { [data.id]: SCHEMA.schema });\n    results[RTCKey][data.id].startTime = data.timestampUs || data.timestamp;\n  }\n\n  SCHEMA.standartKeys.forEach(item => {\n    item.type === 'array'\n      ? results[RTCKey][data.id][item.key].push(\n        data[item.key] || item.defaultValue\n      )\n      : (results[RTCKey][data.id][item.key] =\n        data[item.key] || item.defaultValue);\n  });\n\n  SCHEMA.exceptionKeys.forEach(item => {\n    const valueToSave = _.get(data, item.exceptionKey, data[item.exceptionKey2] || item.defaultValue);\n\n    item.type === 'array'\n      ? results[RTCKey][data.id][item.key].push(valueToSave)\n      : (results[RTCKey][data.id][item.key] = valueToSave);\n  });\n}\n\nfunction handleFileSelection(file, setCalls, setError) {\n  const fileReader = new FileReader();\n\n  fileReader.onload = loadEvent => {\n    results = resetResults();\n    handleFileContentParsing(loadEvent.target.result, setCalls, setError);\n  }\n\n  fileReader.onerror = () => {\n    setError(fileReader.error);\n    console.warn(fileReader.error);\n  }\n\n  fileReader.readAsText(file);\n}\n\nfunction handleFileContentParsing(fileContent, setCalls,setError) {\n  try {\n    parsedData = JSON.parse(fileContent);\n\n    if (parsedData.length > 0) {\n      const calls = parsedData.map((call, i) => {\n        const data = parseCallStatsData(call[1])\n        return {\n          id: call[0],\n          ...data\n        };\n      });\n\n      setCalls(calls);\n    }\n  } catch (error) {\n    setError(error);\n    console.error(error);\n  }\n}\n\nfunction parseCallStatsData(allLogItems) {\n  results = resetResults();\n\n  // JS SDK provides an item starting with \"kandy-sdk-info\"\n  // every time it produces new logs\n  let allSdkInfoItems;\n  if (allLogItems[0].id) {\n    allSdkInfoItems = allLogItems.filter(item => item.id.includes('kandy-sdk-info'));\n  } else {\n    allSdkInfoItems = allLogItems.map(item => item[\"kandy-sdk-info\"]);\n  }\n\n  // first and second items are needed to get samplingPeriod\n  // last item is needed to get endTime\n  const sdkInfo = getSDKInfo(allSdkInfoItems[0], allSdkInfoItems[1], allSdkInfoItems[allSdkInfoItems.length - 1]);\n\n  const data = SDKStatsParser(allLogItems);\n\n  return {\n    sdkInfo,\n    data\n  }\n}\n\nfunction SDKStatsParser(parsedData) {\n  parsedData.forEach(item => {\n    if (item.id) {\n      saveData(item.id, item, parsedData);\n    } else {\n      Object.keys(item).forEach(key => {\n        let newObj = { ...item[key], ...item[key].members };\n        delete newObj.members;\n        saveData(key, newObj, item);\n      })\n    }\n\n  });\n  return results;\n}\n\nfunction saveData(key, data, fullData) {\n  switch (true) {\n    case key.includes(RTCInboundRTPAudioStream):\n      saveChartData(RTCInboundRTPAudioStream, data, fullData);\n      break;\n    case key.includes(RTCOutboundRTPAudioStream):\n      saveChartData(RTCOutboundRTPAudioStream, data, fullData);\n      break;\n    case key.includes(RTCInboundRTPVideoStream):\n      saveChartData(RTCInboundRTPVideoStream, data, fullData);\n      break;\n    case key.includes(RTCOutboundRTPVideoStream):\n      saveChartData(RTCOutboundRTPVideoStream, data, fullData);\n      break;\n    // the order of the next two cases is very important\n    // do not change it unless you know what you're doing\n    case key.includes(RTCIceCandidatePair):\n      saveConstData(RTCIceCandidatePair, data);\n      break;\n    case key.includes(RTCIceCandidate):\n      saveConstData(RTCIceCandidate, data);\n      break;\n    default:\n      break;\n  }\n}\n\nfunction getSDKInfo(firstSdkInfoObj, secondSdkInfoObj, lastSdkInfoObj) {\n  let _sdkInfoObj = Object.assign({}, firstSdkInfoObj);\n  secondSdkInfoObj = secondSdkInfoObj || firstSdkInfoObj;\n  // mobileSDK has the values under members\n  // move the values to the object root\n  if (_sdkInfoObj && _sdkInfoObj.members) {\n    _sdkInfoObj = { ...firstSdkInfoObj, ..._sdkInfoObj.members };\n    delete _sdkInfoObj.members;\n  }\n\n  const { sdk, version, callId, platform, timestampUs, timestamp } = _sdkInfoObj;\n\n  // get timestamp value from the very last item in the logs\n  // to have endTime\n  const { timestampUs: _timestampUs, timestamp: _timestamp } = lastSdkInfoObj;\n\n  // different platforms have different names for timestamp\n  // get available one\n  const startTime = timestampUs || timestamp;\n  const endTime = _timestampUs || _timestamp;\n\n  const _samplingPeriod =\n    timestampToMiliseconds(secondSdkInfoObj.timestampUs || secondSdkInfoObj.timestamp) -\n    timestampToMiliseconds(firstSdkInfoObj.timestampUs || firstSdkInfoObj.timestamp);\n\n  samplingPeriod = !isNaN(_samplingPeriod)\n    ? Math.round(_samplingPeriod / 1000)\n    : 0;\n\n  return {\n    sdk,\n    version,\n    callId,\n    platform,\n    startTime,\n    endTime,\n    samplingPeriod\n  };\n}\n\nfunction calculatePerSecondValue({ currentValue, previousValue, currentTime, previousTime }) {\n  if (!currentValue) return 0;\n\n  const deltaValue = currentValue - previousValue;\n  const deltaTime = timestampToMiliseconds(currentTime) - timestampToMiliseconds(previousTime);\n\n  return (deltaValue / (deltaTime / 1000));\n}\n\nfunction getItemFromCollectionByKey(dataList, key) {\n  // JS SDK\n  if (Array.isArray(dataList)) {\n    return dataList.find(item => item.id === key);\n\n    // MobileSDK\n  } else {\n    return dataList[key];\n  }\n}\n\nexport {\n  handleFileSelection\n}","export const RTCInboundRTPAudioStream = 'RTCInboundRTPAudioStream';\nexport const RTCOutboundRTPAudioStream = 'RTCOutboundRTPAudioStream';\nexport const RTCInboundRTPVideoStream = 'RTCInboundRTPVideoStream';\nexport const RTCOutboundRTPVideoStream = 'RTCOutboundRTPVideoStream';\nexport const RTCIceCandidate = 'RTCIceCandidate';\nexport const RTCIceCandidatePair = 'RTCIceCandidatePair';\nexport const sdkInfoSchema = [\n  { text: 'SDK', key: 'sdk' },\n  { text: 'SDK Version', key: 'version' },\n  { text: 'Platform', key: 'platform' },\n  { text: 'Call Id', key: 'callId' },\n  { text: 'Start Time', key: 'startTime', isDate: true },\n  { text: 'End Time', key: 'endTime', isDate: true },\n  { text: 'Sampling Period (s)', key: 'samplingPeriod' },\n];","import {\n  RTCInboundRTPAudioStream,\n  RTCOutboundRTPAudioStream,\n  RTCInboundRTPVideoStream,\n  RTCOutboundRTPVideoStream,\n  RTCIceCandidate,\n  RTCIceCandidatePair,\n} from '../constants';\n\nconst SCHEMAS = {\n  [RTCIceCandidatePair]: () => ({\n    schema: {\n      startTime: 0,\n      endTime: 0,\n      nominated: false,\n      localCandidateId: '',\n      remoteCandidateId: '',\n      transportId: '',\n    },\n    standartKeys: [\n      {key: 'nominated', defaultValue: false, type: 'boolean'},\n      {key: 'localCandidateId', defaultValue: '', type: 'string'},\n      {key: 'remoteCandidateId', defaultValue: 0, type: 'string'},\n      {key: 'transportId', defaultValue: '', type: 'string'},\n    ],\n    exceptionKeys: [\n      {key: 'endTime', hasLinkedKey: false, exceptionKey: 'timestampUs', exceptionKey2: 'timestamp', type: 'number'},\n    ]\n  }),\n  [RTCIceCandidate]: () => ({\n    schema: {\n      startTime: 0,\n      endTime: 0,\n      networkType: '',\n      ip: '',\n      port: '',\n      candidateType: '',\n      relayProtocol: '',\n    },\n    standartKeys: [\n      {key: 'networkType', defaultValue: 'n/a', type: 'string'},\n      {key: 'ip', defaultValue: 'n/a', type: 'string'},\n      {key: 'port', defaultValue: 0, type: 'number'},\n      {key: 'candidateType', defaultValue: 'n/a', type: 'string'},\n    ],\n    exceptionKeys: [\n      {key: 'endTime', hasLinkedKey: false, exceptionKey: 'timestampUs', exceptionKey2: 'timestamp', type: 'number'},\n      {key: 'relayProtocol', hasLinkedKey: false, exceptionKey: 'protocol', type: 'string'},\n    ]\n  }),\n  [RTCInboundRTPAudioStream]: () => ({\n    schema: {\n      startTime: 0,\n      endTime: 0,\n      codec: '',\n      packetsReceived: [],\n      packetsReceived_s: [],\n      bytesReceived: [],\n      bytesReceived_s: [],\n      packetsLost: [],\n      jitter: [],\n      jitterBufferDelay: [],\n      streamIds: [],\n      totalPacketsReceived: 0,\n      totalBytesReceived: 0\n    },\n    standartKeys: [\n      {key: 'packetsLost', defaultValue: 0, type: 'array'},\n      {key: 'jitter', defaultValue: 0, type: 'array'},\n    ],\n    exceptionKeys: [\n      {key: 'jitterBufferDelay', hasLinkedKey: true, linkedKey: 'trackId', exceptionKey: 'members.jitterBufferDelay', type: 'array'},\n      {key: 'codec', hasLinkedKey: true, linkedKey: 'codecId', exceptionKey: 'members.mimeType', exceptionKey2: 'mimeType', type: 'string'},\n      {key: 'endTime', hasLinkedKey: false, exceptionKey: 'timestampUs', exceptionKey2: 'timestamp', type: 'number'},\n      {key: 'streamIds', hasLinkedKey: false, exceptionKey: 'id', type: 'array'},\n    ],\n    perSecondCalculationKeys: [\n      {key: 'packetsReceived', perSecondKey: 'packetsReceived_s', totalValueKey: 'totalPacketsReceived'},\n      {key: 'bytesReceived', perSecondKey: 'bytesReceived_s', totalValueKey: 'totalBytesReceived'},\n    ],\n    hiddenKeys: ['totalPacketsReceived', 'totalBytesReceived', 'streamIds']\n  }),\n  [RTCOutboundRTPAudioStream]: () => ({\n    schema: {\n      startTime: 0,\n      endTime: 0,\n      codec: '',\n      packetsSent: [],\n      packetsSent_s: [],\n      bytesSent: [],\n      bytesSent_s: [],\n      streamIds: [],\n      totalPacketsSent: 0,\n      totalBytesSent: 0\n    },\n    standartKeys: [],\n    exceptionKeys: [\n      {key: 'endTime', hasLinkedKey: false, exceptionKey: 'timestampUs', exceptionKey2: 'timestamp', type: 'number'},\n      {key: 'streamIds', hasLinkedKey: false, exceptionKey: 'id', type: 'array'},\n      {key: 'codec', hasLinkedKey: true, linkedKey: 'codecId', exceptionKey: 'members.mimeType', exceptionKey2: 'mimeType', type: 'string'},\n    ],\n    perSecondCalculationKeys: [\n      {key: 'packetsSent', perSecondKey: 'packetsSent_s', totalValueKey: 'totalPacketsSent'},\n      {key: 'bytesSent', perSecondKey: 'bytesSent_s', totalValueKey: 'totalBytesSent'},\n    ],\n    hiddenKeys: ['totalPacketsSent', 'totalBytesSent', 'streamIds']\n  }),\n  [RTCInboundRTPVideoStream]: () => ({\n    schema: {\n      startTime: 0,\n      endTime: 0,\n      codec: '',\n      decoderImplementation: '',\n      pliCount: [],\n      nackCount: [],\n      packetsReceived: [],\n      packetsReceived_s: [],\n      bytesReceived: [],\n      bytesReceived_s: [],\n      frameWidth: [],\n      frameHeight: [],\n      framesPerSecond: [],\n      streamIds: [],\n      totalPacketsReceived: 0,\n      totalBytesReceived: 0\n    },\n    standartKeys: [\n      {key: 'pliCount', defaultValue: 0, type: 'array'},\n      {key: 'nackCount', defaultValue: 0, type: 'array'},\n      {key: 'frameWidth', defaultValue: 0, type: 'array'},\n      {key: 'frameHeight', defaultValue: 0, type: 'array'},\n      {key: 'framesPerSecond', defaultValue: 0, type: 'array'},\n      {key: 'decoderImplementation', defaultValue: '', type: 'string'}\n    ],\n    exceptionKeys: [\n      {key: 'endTime', hasLinkedKey: false, exceptionKey: 'timestampUs', exceptionKey2: 'timestamp', type: 'number'},\n      {key: 'streamIds', hasLinkedKey: false, exceptionKey: 'id', type: 'array'},\n      {key: 'codec', hasLinkedKey: true, linkedKey: 'codecId', exceptionKey: 'members.mimeType', exceptionKey2: 'mimeType', type: 'string'},\n    ],\n    perSecondCalculationKeys: [\n      {key: 'packetsReceived', perSecondKey: 'packetsReceived_s', totalValueKey: 'totalPacketsReceived'},\n      {key: 'bytesReceived', perSecondKey: 'bytesReceived_s', totalValueKey: 'totalBytesReceived'},\n    ],\n    hiddenKeys: ['totalPacketsReceived', 'totalBytesReceived', 'streamIds']\n  }),\n  [RTCOutboundRTPVideoStream]: () => ({\n    schema: {\n      startTime: 0,\n      endTime: 0,\n      codec: '',\n      encoderImplementation: '',\n      pliCount: [],\n      nackCount: [],\n      packetsSent: [],\n      packetsSent_s: [],\n      bytesSent: [],\n      bytesSent_s: [],\n      frameWidth: [],\n      frameHeight: [],\n      framesPerSecond: [],\n      streamIds: [],\n      totalPacketsSent: 0,\n      totalBytesSent: 0\n    },\n    standartKeys: [\n      {key: 'pliCount', defaultValue: 0, type: 'array'},\n      {key: 'nackCount', defaultValue: 0, type: 'array'},\n      {key: 'frameWidth', defaultValue: 0, type: 'array'},\n      {key: 'frameHeight', defaultValue: 0, type: 'array'},\n      {key: 'framesPerSecond', defaultValue: 0, type: 'array'},\n      {key: 'encoderImplementation', defaultValue: '', type: 'string'}\n    ],\n    exceptionKeys: [\n      {key: 'endTime', hasLinkedKey: false, exceptionKey: 'timestampUs', exceptionKey2: 'timestamp', type: 'number'},\n      {key: 'streamIds', hasLinkedKey: false, exceptionKey: 'id', type: 'array'},\n      {key: 'codec', hasLinkedKey: true, linkedKey: 'codecId', exceptionKey: 'members.mimeType', exceptionKey2: 'mimeType', type: 'string'},\n    ],\n    perSecondCalculationKeys: [\n      {key: 'packetsSent', perSecondKey: 'packetsSent_s', totalValueKey: 'totalPacketsSent'},\n      {key: 'bytesSent', perSecondKey: 'bytesSent_s', totalValueKey: 'totalBytesSent'},\n    ],\n    hiddenKeys: ['totalPacketsSent', 'totalBytesSent', 'streamIds']\n  })\n};\n\nexport default SCHEMAS;","export const timestampToMiliseconds = timestamp => (timestamp > (10 ** 15)) ? Math.ceil(timestamp / 1000) : timestamp;\n\nexport const timestampToLocalTime = timestamp => (new Intl.DateTimeFormat(navigator.languages[0], { timeStyle: 'medium', hour12: false }).format(new Date(timestamp)));\n\nexport const timestampToLocalDateTime = timestamp => (new Intl.DateTimeFormat(navigator.languages[0], { dateStyle: 'medium', timeStyle: 'medium', hour12: false }).format(new Date(timestamp)));\n\nexport const isLikelyTimeStamp = value => !isNaN(value) && (String(value).length >= 13);\n","import React, { Component } from 'react';\nimport { Collapse, Descriptions, Row, Divider } from 'antd';\nimport _ from 'lodash';\n\nimport Chart from './chart';\nimport {\n  RTCIceCandidatePair,\n  RTCIceCandidate\n} from '../constants';\nimport SCHEMAS from '../parser/schemas';\nimport {\n  timestampToMiliseconds,\n  timestampToLocalTime,\n  isLikelyTimeStamp,\n} from '../utils';\n\nconst { Panel } = Collapse;\n\nclass DataContainer extends Component {\n  state = {\n    localCandidateId: null,\n    remoteCandidateId: null,\n    mainCollapseActiveKeys: [],\n    iceCandidateActiveKeys: []\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!_.isEqual(this.props.descriptionList, prevProps.descriptionList)) {\n      this.setState({\n        localCandidateId: null,\n        remoteCandidateId: null,\n        mainCollapseActiveKeys: [],\n        iceCandidateActiveKeys: []\n      });\n    }\n  }\n\n  render() {\n    const { mainCollapseActiveKeys } = this.state;\n\n    return(\n      <Collapse\n        activeKey={ mainCollapseActiveKeys }\n        onChange={ activeKeys => this.setState({mainCollapseActiveKeys: [...activeKeys]}) }\n      >\n        { this._getCharts() }\n        { this._getIceCandidatePairs() }\n        { this._getIceCandidates() }\n      </Collapse>\n    );\n  }\n\n  _getCharts() {\n    const { chartList } = this.props;\n\n    if(_.isEmpty(chartList))\n      return null;\n\n    return chartList.map(chartData => {\n      const result = {};\n      const hiddenKeys = SCHEMAS[chartData[0]]().hiddenKeys;\n      const _charts = Object.entries(chartData[1]).filter(item => Array.isArray(item[1]) && !hiddenKeys.includes(item[0]));\n      const _chartDescriptions = Object.entries(chartData[1]).filter(item => !Array.isArray(item[1]) && !hiddenKeys.includes(item[0]));\n  \n      result['charts'] = _charts.map(chart => {\n        const _chartData = chart[1];\n        const startTime = timestampToMiliseconds(chartData[1].startTime);\n        const endTime = timestampToMiliseconds(chartData[1].endTime);\n        const finalChartData = [];\n  \n        const timeDiff = endTime - startTime;\n        const timeSpan = timeDiff / _chartData.length;\n  \n        _chartData.forEach((value, i) => {\n          const date = new Date(startTime + (timeSpan * (i + 1)));\n  \n          finalChartData.push({\n            'time': timestampToLocalTime(date.getTime()),\n            'value': value\n          });\n        });\n  \n        return (\n          <Chart title={ chart[0] } key={chart[0]} data={ finalChartData } />\n        );\n      });\n  \n      result['chartDescriptions'] = _chartDescriptions.map(description => {\n        return (\n          <Descriptions.Item label={ description[0] } key={description[0]} labelStyle={{ fontWeight: 'bold' }}>\n            { isLikelyTimeStamp(description[1]) ? timestampToLocalTime(timestampToMiliseconds(description[1])) : description[1] }\n          </Descriptions.Item>\n        );\n      });\n  \n      return (\n        <Panel header={ chartData[0] } key={ chartData[0] }>\n          <Row style={{ justifyContent: 'center' }}>\n            <Descriptions style={{ padding: 10}} column={{ xs: 1, sm: 2, lg: 4 }}>\n              { result['chartDescriptions'] }\n            </Descriptions>\n          </Row>\n          <Divider>Charts</Divider>\n          <Row style={{ justifyContent: 'center' }}>\n            { result['charts'] }\n          </Row>\n        </Panel>\n      );\n    });\n  }\n\n  _getIceCandidatePairs() {\n    const { descriptionList } = this.props;\n    const { localCandidateId, remoteCandidateId } = this.state;\n    \n    if (_.isEmpty(descriptionList))\n      return null;\n\n    let iceCandidatePairList = descriptionList.find(item => item[0] === RTCIceCandidatePair)[1];\n    const iceCandidatePairArray = Object.entries(iceCandidatePairList);\n    let nominatedCandidatePairIndex = 0;\n    const nominatedCandidatePair = iceCandidatePairArray.find((item, i) => {\n      if (item[1].nominated) {\n        nominatedCandidatePairIndex = i;\n        return true;\n      }\n      return false;\n    });\n    const candidateIds = {\n      localCandidateId: nominatedCandidatePair[1].localCandidateId,\n      remoteCandidateId: nominatedCandidatePair[1].remoteCandidateId\n    };\n\n    delete iceCandidatePairArray[nominatedCandidatePairIndex];\n    iceCandidatePairArray.unshift(nominatedCandidatePair);\n\n    if (!localCandidateId && !remoteCandidateId) {\n      this.setState(candidateIds);\n    }\n\n    return(\n      <Panel header={ RTCIceCandidatePair } key={ RTCIceCandidatePair }>\n        <Collapse>\n          {\n            iceCandidatePairArray.map(iceCandidatePair => {\n              const iceCandidatePairKey = iceCandidatePair[0];\n              const iceCandidatePairData = iceCandidatePair[1];\n\n              return (\n                <Panel\n                  header={ this._getPanelHeaderStyle({ isBold: iceCandidatePairData.nominated, headerText: iceCandidatePairKey }) }\n                  key={ iceCandidatePairKey }\n                >\n                  <Descriptions style={{ padding: 10}} column={{ xs: 1, sm: 2, lg: 4 }}>\n                    {\n                      Object.entries(iceCandidatePairData).map(entry => {\n                        return (\n                          <Descriptions.Item label={ entry[0] } key={entry[0]} labelStyle={{ fontWeight: 'bold' }}>\n                            { \n                              isLikelyTimeStamp(entry[1]) ?\n                              timestampToLocalTime(timestampToMiliseconds(entry[1])) :\n                              (['localCandidateId', 'remoteCandidateId'].includes(entry[0]) ?\n                              (<a\n                                  onClick={ () => this._onClickIceCandidatePairLink(entry[1]) }\n                                  href={ `#${entry[1]}` }>{ String(entry[1]) }\n                                </a>) :\n                              String(entry[1]))\n                            }\n                          </Descriptions.Item>\n                        );\n                      })\n                    }\n                  </Descriptions>\n                </Panel>\n              );\n            })\n          }\n        </Collapse>\n      </Panel>\n    );\n  }\n\n  _getIceCandidates() {\n    const { descriptionList } = this.props;\n    const {\n      localCandidateId,\n      remoteCandidateId,\n      iceCandidateActiveKeys\n    } = this.state;\n    \n    if (_.isEmpty(descriptionList))\n      return null;\n\n    const iceCandidateList = descriptionList.find(item => item[0] === RTCIceCandidate)[1];\n    let iceCandidateArray = Object.entries(iceCandidateList);\n    const notNominatedCandidates = [];\n    const nominatedCandidates = [];\n\n    iceCandidateArray.forEach(item => {\n      if ([localCandidateId, remoteCandidateId].includes(item[0])) {\n        nominatedCandidates.push(item);\n      } else {\n        notNominatedCandidates.push(item);\n      }\n    });\n\n    iceCandidateArray = [...nominatedCandidates, ...notNominatedCandidates];\n\n    return(\n      <Panel header={ RTCIceCandidate } key={ RTCIceCandidate }>\n        <Collapse\n          activeKey={ iceCandidateActiveKeys }\n          onChange={ (activeKeys) => this.setState({iceCandidateActiveKeys: [...activeKeys]}) }\n        >\n          {\n            iceCandidateArray.map(iceCandidate => {\n              const iceCandidateKey = iceCandidate[0];\n              const iceCandidateData = iceCandidate[1];\n\n              return (\n                <Panel\n                  header={this._getPanelHeaderStyle({ isBold: [localCandidateId, remoteCandidateId].includes(iceCandidateKey), headerText: iceCandidateKey })}\n                  key={ iceCandidateKey }\n                  id={ iceCandidateKey }\n                >\n                  <Descriptions style={{ padding: 10}} column={ { xs: 1, sm: 2, lg: 4 } }>\n                    {\n                      Object.entries(iceCandidateData).map(entry => {\n                        return (\n                          <Descriptions.Item label={ entry[0] } labelStyle={{ fontWeight: 'bold' }} key={entry[0]}>\n                            { isLikelyTimeStamp(entry[1]) ? timestampToLocalTime(timestampToMiliseconds(entry[1])) : String(entry[1]) }\n                          </Descriptions.Item>\n                        );\n                      })\n                    }\n                  </Descriptions>\n                </Panel>\n              );\n            })\n          }\n        </Collapse>\n      </Panel>\n    );\n  }\n\n  _getPanelHeaderStyle({ isBold, headerText }) {\n    return(\n      <span style={{ fontWeight: isBold ? 'bold' : 'normal' }}>\n        { headerText }\n      </span>\n    );\n  }\n\n  _onClickIceCandidatePairLink(activeKey) {\n    const { mainCollapseActiveKeys, iceCandidateActiveKeys } = this.state;\n\n    const isAdded = mainCollapseActiveKeys.indexOf(RTCIceCandidate);\n    let newState = {\n      iceCandidateActiveKeys: [activeKey, ...iceCandidateActiveKeys]\n    };\n\n    if (isAdded === -1) {\n      newState = {\n        ...newState,\n        mainCollapseActiveKeys: [RTCIceCandidate, ...mainCollapseActiveKeys]\n      };\n    }\n\n    this.setState(newState);\n  }\n}\n\nexport default React.memo(DataContainer);","import { useState, memo, useEffect } from 'react';\nimport { Layout, Upload, Descriptions, Divider, Tabs, Spin, notification } from 'antd';\nimport { InboxOutlined } from '@ant-design/icons';\n\nimport 'antd/dist/antd.css';\n\nimport DataContainer from './components/dataContainer';\nimport { handleFileSelection } from './parser/parser';\nimport { timestampToMiliseconds, timestampToLocalDateTime } from './utils';\nimport {\n  RTCIceCandidatePair,\n  RTCIceCandidate,\n  RTCInboundRTPAudioStream,\n  RTCOutboundRTPAudioStream,\n  RTCInboundRTPVideoStream,\n  RTCOutboundRTPVideoStream,\n  sdkInfoSchema\n} from './constants';\n\nconst CHARTS = [\n  RTCInboundRTPAudioStream,\n  RTCOutboundRTPAudioStream,\n  RTCInboundRTPVideoStream,\n  RTCOutboundRTPVideoStream,\n];\nconst DESCRIPTIONS = [RTCIceCandidatePair, RTCIceCandidate];\n\nconst { Content } = Layout;\nconst { Dragger } = Upload;\n\nfunction App() {\n  const [calls, setCalls] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setLoading(false);\n  }, [calls]);\n\n  useEffect(() => {\n    if (error) {\n      setLoading(false);\n      setCalls(null);\n      notification.error({\n        message: \"Upps! Error Occured\",\n        description: error.toString(),\n        onClick: () => {\n          console.log('Notification Clicked!');\n        },\n      });\n    }\n  }, [error]);\n\n  const draggerProps = {\n    name: 'file',\n    showUploadList: false,\n    customRequest(info) {\n      console.log('Override default xhr implementation: ', info);\n    },\n    onChange(info) {\n      setLoading(true);\n      const { file } = info;\n      handleFileSelection(file.originFileObj, setCalls, setError);\n    }\n  };\n\n  const tabsProps = {\n    defaultActiveKey: '0',\n    type: 'card',\n    size: 'large'\n  }\n\n  function renderDragger() {\n    return (\n      <Dragger {...draggerProps}>\n        <p className=\"ant-upload-drag-icon\">\n          <InboxOutlined />\n        </p>\n        <p className=\"ant-upload-text\">\n          Click or drag file to this area to upload\n      </p>\n      </Dragger>\n    );\n  }\n\n  function renderTabs() {\n    return calls ? (\n      <>\n        <Divider>Calls</Divider>\n        <Tabs {...tabsProps}>\n          {calls.map((call, i) => {\n            const { id, data } = call;\n            const chartList = Object.entries(data || {}).filter(item => item[1] && CHARTS.includes(item[0]));\n            const descriptionList = Object.entries(data || {}).filter(item => item[1] && DESCRIPTIONS.includes(item[0]));\n\n            return (\n              <Tabs.TabPane tab={id.length > 30 ? (id.slice(0, 30) + \"...\") : id} key={id}>\n                {renderSDKInfo(i)}\n                {data ? (\n                  <>\n                    <Divider>Charts and Statistics Info</Divider>\n                    <DataContainer {...{ chartList, descriptionList }} key={id} />\n                  </>\n                ) : null}\n              </Tabs.TabPane>\n            );\n          })}\n        </Tabs>\n      </>\n    ) : null;\n  }\n\n  function renderSDKInfo(i) {\n    const { sdkInfo } = calls[i];\n    return sdkInfo ? (\n      <>\n        <Divider>SDK Info</Divider>\n        <Descriptions\n          style={{ padding: 10 }}\n          column={{ xs: 1, sm: 2, lg: 4 }}\n        >\n          {sdkInfoSchema.map((item) => {\n            return (\n              <Descriptions.Item\n                label={item.text}\n                labelStyle={{ fontWeight: \"bold\" }}\n                key={item.key}\n              >\n                {item.isDate\n                  ? timestampToLocalDateTime(\n                    timestampToMiliseconds(sdkInfo[item.key])\n                  )\n                  : sdkInfo[item.key] || \"\"}\n              </Descriptions.Item>\n            );\n          })}\n        </Descriptions>\n      </>\n    ) : null;\n  }\n\n\n  return (\n    <Spin spinning={loading}>\n      <Layout>\n        <Content style={{ backgroundColor: \"white\" }}>\n          {\n            renderDragger()\n          }\n          {\n            renderTabs()\n          }\n        </Content>\n      </Layout>\n    </Spin>\n  );\n\n\n}\n\nexport default memo(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}